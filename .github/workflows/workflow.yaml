name: Go

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: 1.18
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        go-version: ['1.18', '1.19', '1.20']
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      OS: ${{ matrix.os }}
      GOVERSION: ${{ matrix.go-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
          cache: true
      - name: Display Go version
        run: go version
      - name: Install dependencies
        run: make setup
      - name: Test
        run: make ci
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report-${{ matrix.os }}
          path: coverage.txt

  coverage:
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - name: Download a linux coverage report
        uses: actions/download-artifact@v4.1.7
        with:
          name: code-coverage-report-ubuntu-latest
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          flags: unittest
